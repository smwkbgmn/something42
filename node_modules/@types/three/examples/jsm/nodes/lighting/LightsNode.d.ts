import { Light } from "../../../../index.js";
import Node from "three/examples/jsm/nodes/core/Node.js";
import { ShaderNodeObject } from "../shadernode/ShaderNode.js";
import LightingNode from "three/examples/jsm/nodes/lighting/LightingNode.js";

export default class LightsNode extends Node {
    lightNodes: LightingNode[];

    constructor(lightNodes?: LightingNode[]);

    get hasLight(): boolean;
    getLightNodeByHash(hash: string): LightingNode | null;

    fromLights(lights: Light[]): this;

    static setReference<T extends Light>(
        lightClass: { new(): T },
        lightNodeClass: { new(light: T): LightingNode },
    ): void;
}

export const lights: (lights: Light[]) => ShaderNodeObject<LightsNode>;
